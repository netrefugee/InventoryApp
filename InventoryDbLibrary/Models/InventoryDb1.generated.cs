//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace Models
{
	/// <summary>
	/// Database       : Inventory
	/// Data Source    : Inventory
	/// Server Version : 3.19.3
	/// </summary>
	public partial class InventoryDB : LinqToDB.Data.DataConnection
	{
		public ITable<Client>          Clients          { get { return this.GetTable<Client>(); } }
		public ITable<ClientAccount>   ClientAccounts   { get { return this.GetTable<ClientAccount>(); } }
		public ITable<Farmer>          Farmers          { get { return this.GetTable<Farmer>(); } }
		public ITable<Good>            Goods            { get { return this.GetTable<Good>(); } }
		public ITable<Log>             Logs             { get { return this.GetTable<Log>(); } }
		public ITable<Purchase>        Purchases        { get { return this.GetTable<Purchase>(); } }
		public ITable<PurchaseOrder>   PurchaseOrders   { get { return this.GetTable<PurchaseOrder>(); } }
		public ITable<Retail>          Retails          { get { return this.GetTable<Retail>(); } }
		public ITable<Stock>           Stocks           { get { return this.GetTable<Stock>(); } }
		public ITable<Supplier>        Suppliers        { get { return this.GetTable<Supplier>(); } }
		public ITable<SupplierAccount> SupplierAccounts { get { return this.GetTable<SupplierAccount>(); } }
		public ITable<Wholesale>       Wholesales       { get { return this.GetTable<Wholesale>(); } }

		public void InitMappingSchema()
		{
		}

		public InventoryDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public InventoryDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext();
	}

	[Table("client")]
	public partial class Client
	{
		[PrimaryKey, Identity   ] public long   客户ID     { get; set; } // integer
		[Column,     NotNull    ] public string 姓名       { get; set; } // text(max)
		[Column,        Nullable] public string 电话       { get; set; } // text(max)
		[Column,        Nullable] public string 商店名称     { get; set; } // text(max)
		[Column,        Nullable] public string 商店地址     { get; set; } // text(max)
		[Column,        Nullable] public string 库存地址     { get; set; } // text(max)
		[Column,        Nullable] public string 社会统一信用代码 { get; set; } // text(max)

		#region Associations

		/// <summary>
		/// FK_clientAccount_0_0_BackReference
		/// </summary>
		[Association(ThisKey="客户ID", OtherKey="客户ID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ClientAccount> ClientAccounts { get; set; }

		/// <summary>
		/// FK_wholesale_1_0_BackReference
		/// </summary>
		[Association(ThisKey="客户ID", OtherKey="ClientID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Wholesale> Wholesales { get; set; }

		#endregion
	}

	[Table("clientAccount")]
	public partial class ClientAccount
	{
		[Column,     NotNull ] public string 姓名     { get; set; } // text(max)
		[Column,     NotNull ] public string 收入或支出  { get; set; } // text(max)
		[Column,     NotNull ] public double 金额     { get; set; } // real
		[Column,     NotNull ] public string 日期     { get; set; } // text(max)
		[PrimaryKey, Identity] public long   客户账户ID { get; set; } // integer
		[Column,     NotNull ] public long   客户ID   { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_clientAccount_0_0
		/// </summary>
		[Association(ThisKey="客户ID", OtherKey="客户ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_clientAccount_0_0", BackReferenceName="ClientAccounts")]
		public Client 客户 { get; set; }

		#endregion
	}

	[Table("farmer")]
	public partial class Farmer
	{
		[PrimaryKey, Identity] public long   农户ID { get; set; } // integer
		[Column,     Nullable] public string 姓名   { get; set; } // text(max)
		[Column,     Nullable] public string 电话   { get; set; } // text(max)
		[Column,     Nullable] public string 身份证号 { get; set; } // text(max)
		[Column,     Nullable] public string 省    { get; set; } // text(max)
		[Column,     Nullable] public string 市    { get; set; } // text(max)
		[Column,     Nullable] public string 县    { get; set; } // text(max)
		[Column,     Nullable] public string 乡镇   { get; set; } // text(max)
		[Column,     Nullable] public string 村    { get; set; } // text(max)
	}

	[Table("goods")]
	public partial class Good
	{
		[PrimaryKey, Identity   ] public long    商品ID      { get; set; } // integer
		[Column,     NotNull    ] public string  商品追溯码前11位 { get; set; } // text(max)
		[Column,     NotNull    ] public string  商品名称      { get; set; } // text(max)
		[Column,        Nullable] public double? 进货价格      { get; set; } // real
		[Column,        Nullable] public double? 批发价格      { get; set; } // real
		[Column,        Nullable] public double? 零售价格      { get; set; } // real
		[Column,     NotNull    ] public string  单位大       { get; set; } // text(max)
		[Column,     NotNull    ] public long    内含量       { get; set; } // integer
		[Column,     NotNull    ] public string  单位小       { get; set; } // text(max)
		[Column,     NotNull    ] public string  种类大       { get; set; } // text(max)
		[Column,     NotNull    ] public string  种类小       { get; set; } // text(max)
		[Column,        Nullable] public string  主要成分      { get; set; } // text(max)
		[Column,     NotNull    ] public string  是否高毒      { get; set; } // text(max)
		[Column,     NotNull    ] public string  生产厂家      { get; set; } // text(max)
		[Column,        Nullable] public double? 箱重量       { get; set; } // real
		[Column,        Nullable] public double? 瓶重量       { get; set; } // real
		[Column,        Nullable] public string  农药登记证号    { get; set; } // text(max)

		#region Associations

		/// <summary>
		/// FK_purchase_0_0_BackReference
		/// </summary>
		[Association(ThisKey="商品ID", OtherKey="商品ID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Purchase> Purchases { get; set; }

		#endregion
	}

	[Table("log")]
	public partial class Log
	{
		[Column("logID"),       PrimaryKey, NotNull] public long   LogID       { get; set; } // integer
		[Column("logContent"),              NotNull] public string LogContent  { get; set; } // text(max)
		[Column("logDateTime"),             NotNull] public string LogDateTime { get; set; } // text(max)
		[Column("logAction"),               NotNull] public string LogAction   { get; set; } // text(max)
	}

	[Table("purchase")]
	public partial class Purchase
	{
		[PrimaryKey, Identity   ] public long   进货单明细ID { get; set; } // integer
		[Column,     NotNull    ] public long   进货单ID   { get; set; } // integer
		[Column,     NotNull    ] public long   商品ID    { get; set; } // integer
		[Column,     NotNull    ] public long   数量      { get; set; } // integer
		[Column,        Nullable] public string 当前条形码   { get; set; } // text(max)
		[Column,        Nullable] public string 备注      { get; set; } // text(max)
		[Column,     NotNull    ] public double 单价      { get; set; } // real

		#region Associations

		/// <summary>
		/// FK_purchase_1_0
		/// </summary>
		[Association(ThisKey="进货单ID", OtherKey="进货单ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_purchase_1_0", BackReferenceName="Purchases")]
		public PurchaseOrder 进货单 { get; set; }

		/// <summary>
		/// FK_purchase_0_0
		/// </summary>
		[Association(ThisKey="商品ID", OtherKey="商品ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_purchase_0_0", BackReferenceName="Purchases")]
		public Good 商品 { get; set; }

		#endregion
	}

	[Table("purchaseOrder")]
	public partial class PurchaseOrder
	{
		[PrimaryKey, Identity   ] public long   进货单ID { get; set; } // integer
		[Column,     NotNull    ] public string 编号    { get; set; } // text(max)
		[Column,     NotNull    ] public string 日期    { get; set; } // text(max)
		[Column,     NotNull    ] public double 应收    { get; set; } // real
		[Column,     NotNull    ] public string 销赊退   { get; set; } // text(max)
		[Column,     NotNull    ] public long   供应商ID { get; set; } // integer
		[Column,        Nullable] public string 备注    { get; set; } // text(max)
		[Column,     NotNull    ] public string 制单人   { get; set; } // text(max)
		[Column,     NotNull    ] public string 商店名称  { get; set; } // text(max)
		[Column,        Nullable] public string 商店电话  { get; set; } // text(max)
		[Column,     NotNull    ] public double 实收    { get; set; } // real

		#region Associations

		/// <summary>
		/// FK_purchase_1_0_BackReference
		/// </summary>
		[Association(ThisKey="进货单ID", OtherKey="进货单ID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Purchase> Purchases { get; set; }

		/// <summary>
		/// FK_purchaseOrder_0_0
		/// </summary>
		[Association(ThisKey="供应商ID", OtherKey="供应商ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_purchaseOrder_0_0", BackReferenceName="PurchaseOrders")]
		public Supplier 供应商 { get; set; }

		#endregion
	}

	[Table("retail")]
	public partial class Retail
	{
		[Column("retailID"),  PrimaryKey, Identity] public long   RetailID     { get; set; } // integer
		[Column("code"),      NotNull             ] public string Code         { get; set; } // text(max)
		[Column("datatime"),  NotNull             ] public string Datatime     { get; set; } // text(max)
		[Column("storeName"), NotNull             ] public string StoreName    { get; set; } // text(max)
		[Column("goodsID"),   NotNull             ] public long   GoodsID      { get; set; } // integer
		[Column(),            NotNull             ] public double RealPrice    { get; set; } // real
		[Column(),            NotNull             ] public double NumBigUnit   { get; set; } // real
		[Column(),            NotNull             ] public long   NumSmallUnit { get; set; } // integer
		[Column(),            NotNull             ] public double SumPrice     { get; set; } // real
		[Column("isReturn"),  NotNull             ] public long   IsReturn     { get; set; } // integer
		[Column("farmerID"),  NotNull             ] public long   FarmerID     { get; set; } // integer
		[Column("payee"),     NotNull             ] public string Payee        { get; set; } // text(max)
	}

	[Table("stock")]
	public partial class Stock
	{
		[Column("stockID"),   PrimaryKey, Identity] public long   StockID      { get; set; } // integer
		[Column("storeName"), NotNull             ] public string StoreName    { get; set; } // text(max)
		[Column("goodsID"),   NotNull             ] public long   GoodsID      { get; set; } // integer
		[Column(),            NotNull             ] public double NumBigUnit   { get; set; } // real
		[Column(),            NotNull             ] public long   NumSmallUnit { get; set; } // integer
	}

	[Table("supplier")]
	public partial class Supplier
	{
		[PrimaryKey, Identity   ] public long   供应商ID   { get; set; } // integer
		[Column,     NotNull    ] public string 供应商名称   { get; set; } // text(max)
		[Column,        Nullable] public string 联系人     { get; set; } // text(max)
		[Column,        Nullable] public string 电话      { get; set; } // text(max)
		[Column,        Nullable] public string 传真      { get; set; } // text(max)
		[Column,        Nullable] public string 邮箱      { get; set; } // text(max)
		[Column,        Nullable] public string 地址      { get; set; } // text(max)
		[Column,        Nullable] public string 供应商企业性质 { get; set; } // text(max)
		[Column,        Nullable] public string 法人负责人   { get; set; } // text(max)
		[Column,        Nullable] public string 开户银行    { get; set; } // text(max)
		[Column,        Nullable] public string 银行账号    { get; set; } // text(max)
		[Column,        Nullable] public string 备注      { get; set; } // text(max)

		#region Associations

		/// <summary>
		/// FK_purchaseOrder_0_0_BackReference
		/// </summary>
		[Association(ThisKey="供应商ID", OtherKey="供应商ID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<PurchaseOrder> PurchaseOrders { get; set; }

		/// <summary>
		/// FK_supplierAccount_0_0_BackReference
		/// </summary>
		[Association(ThisKey="供应商ID", OtherKey="供应商ID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SupplierAccount> SupplierAccounts { get; set; }

		#endregion
	}

	[Table("supplierAccount")]
	public partial class SupplierAccount
	{
		[Column,     NotNull ] public string 供应商名称   { get; set; } // text(max)
		[Column,     NotNull ] public string 收入或支出   { get; set; } // text(max)
		[Column,     NotNull ] public double 金额      { get; set; } // real
		[Column,     NotNull ] public string 日期      { get; set; } // text(max)
		[PrimaryKey, Identity] public long   供应商账户ID { get; set; } // integer
		[Column,     NotNull ] public long   供应商ID   { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_supplierAccount_0_0
		/// </summary>
		[Association(ThisKey="供应商ID", OtherKey="供应商ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_supplierAccount_0_0", BackReferenceName="SupplierAccounts")]
		public Supplier 供应商 { get; set; }

		#endregion
	}

	[Table("wholesale")]
	public partial class Wholesale
	{
		[Column("wholesaleID"), PrimaryKey, Identity] public long   WholesaleID  { get; set; } // integer
		[Column("code"),        NotNull             ] public string Code         { get; set; } // text(max)
		[Column("datatime"),    NotNull             ] public string Datatime     { get; set; } // text(max)
		[Column("storeName"),   NotNull             ] public string StoreName    { get; set; } // text(max)
		[Column("goodsID"),     NotNull             ] public long   GoodsID      { get; set; } // integer
		[Column(),              NotNull             ] public double RealPrice    { get; set; } // real
		[Column(),              NotNull             ] public double NumBigUnit   { get; set; } // real
		[Column(),              NotNull             ] public long   NumSmallUnit { get; set; } // integer
		[Column(),              NotNull             ] public double SumPrice     { get; set; } // real
		[Column("isReturn"),    NotNull             ] public long   IsReturn     { get; set; } // integer
		[Column("clientID"),    NotNull             ] public long   ClientID     { get; set; } // integer
		[Column("payee"),       NotNull             ] public string Payee        { get; set; } // text(max)

		#region Associations

		/// <summary>
		/// FK_wholesale_1_0
		/// </summary>
		[Association(ThisKey="ClientID", OtherKey="客户ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_wholesale_1_0", BackReferenceName="Wholesales")]
		public Client Client { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Client Find(this ITable<Client> table, long 客户ID)
		{
			return table.FirstOrDefault(t =>
				t.客户ID == 客户ID);
		}

		public static ClientAccount Find(this ITable<ClientAccount> table, long 客户账户ID)
		{
			return table.FirstOrDefault(t =>
				t.客户账户ID == 客户账户ID);
		}

		public static Farmer Find(this ITable<Farmer> table, long 农户ID)
		{
			return table.FirstOrDefault(t =>
				t.农户ID == 农户ID);
		}

		public static Good Find(this ITable<Good> table, long 商品ID)
		{
			return table.FirstOrDefault(t =>
				t.商品ID == 商品ID);
		}

		public static Log Find(this ITable<Log> table, long LogID)
		{
			return table.FirstOrDefault(t =>
				t.LogID == LogID);
		}

		public static Purchase Find(this ITable<Purchase> table, long 进货单明细ID)
		{
			return table.FirstOrDefault(t =>
				t.进货单明细ID == 进货单明细ID);
		}

		public static PurchaseOrder Find(this ITable<PurchaseOrder> table, long 进货单ID)
		{
			return table.FirstOrDefault(t =>
				t.进货单ID == 进货单ID);
		}

		public static Retail Find(this ITable<Retail> table, long RetailID)
		{
			return table.FirstOrDefault(t =>
				t.RetailID == RetailID);
		}

		public static Stock Find(this ITable<Stock> table, long StockID)
		{
			return table.FirstOrDefault(t =>
				t.StockID == StockID);
		}

		public static Supplier Find(this ITable<Supplier> table, long 供应商ID)
		{
			return table.FirstOrDefault(t =>
				t.供应商ID == 供应商ID);
		}

		public static SupplierAccount Find(this ITable<SupplierAccount> table, long 供应商账户ID)
		{
			return table.FirstOrDefault(t =>
				t.供应商账户ID == 供应商账户ID);
		}

		public static Wholesale Find(this ITable<Wholesale> table, long WholesaleID)
		{
			return table.FirstOrDefault(t =>
				t.WholesaleID == WholesaleID);
		}
	}
}
